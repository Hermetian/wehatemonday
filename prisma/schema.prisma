generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(uuid())
  email           String
  name            String?
  role            UserRole   @default(CUSTOMER)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now())
  cleanupAt       DateTime?
  metadata        Json?
  testBatchId     String?
  auditLogs       AuditLog[]
  assignedTickets Ticket[]   @relation("AssignedTo")
  createdTickets  Ticket[]   @relation("CreatedBy")
  assignedTeams   Team[]     @relation("TeamMembers")

  @@unique([email, testBatchId], name: "email_unique_non_test")
}

model Team {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  members   User[]   @relation("TeamMembers")
}

model Ticket {
  id           String    @id @default(cuid())
  title        String
  description  String
  descriptionHtml String @default("")
  status       String    @default("OPEN")
  priority     String    @default("MEDIUM")
  customerId   String
  assignedToId String?
  createdById  String
  tags         String[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
  cleanupAt    DateTime?
  testBatchId  String?
  metadata     Json?     @default("{}")
  messages     Message[]
  assignedTo   User?     @relation("AssignedTo", fields: [assignedToId], references: [id])
  createdBy    User      @relation("CreatedBy", fields: [createdById], references: [id])
}

model Message {
  id         String   @id @default(cuid())
  content    String
  contentHtml String @default("")
  ticketId   String
  isInternal Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  ticket     Ticket   @relation(fields: [ticketId], references: [id])
}

model AuditLog {
  id        String   @id @default(cuid())
  action    String
  entity    String
  entityId  String
  userId    String
  oldData   Json?
  newData   Json
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([entity, entityId])
  @@index([userId])
}

enum UserRole {
  ADMIN
  MANAGER
  AGENT
  CUSTOMER
}
