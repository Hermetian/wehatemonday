generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String     @id @default(uuid())
  email           String
  name            String?
  role            UserRole   @default(CUSTOMER)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now())
  cleanupAt       DateTime?
  metadata        Json?
  testBatchId     String?
  auditLogs       AuditLog[]
  assignedTickets Ticket[]   @relation("AssignedTo")
  createdTickets  Ticket[]   @relation("CreatedBy")
  assignedTeams   Team[]     @relation("TeamMembers")

  @@unique([email, testBatchId], name: "email_unique_non_test")
  @@index([role])
}

model Team {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  tags      String[]
  members   User[]   @relation("TeamMembers")

  @@index([name])
}

model Ticket {
  id              String    @id @default(cuid())
  title           String
  description     String
  status          String    @default("OPEN")
  priority        String    @default("MEDIUM")
  customerId      String
  assignedToId    String?
  createdById     String
  tags            String[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  cleanupAt       DateTime?
  testBatchId     String?
  metadata        Json?     @default("{}")
  descriptionHtml String    @default("")
  messages        Message[]
  assignedTo      User?     @relation("AssignedTo", fields: [assignedToId], references: [id])
  createdBy       User      @relation("CreatedBy", fields: [createdById], references: [id])

  @@index([status])
  @@index([priority])
  @@index([customerId])
  @@index([assignedToId])
  @@index([createdById])
  @@index([updatedAt])
  @@index([testBatchId])
  @@index([tags])
}

model Message {
  id          String   @id @default(cuid())
  content     String
  ticketId    String
  isInternal  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  contentHtml String   @default("")
  ticket      Ticket   @relation(fields: [ticketId], references: [id])

  @@index([ticketId])
  @@index([isInternal])
}

model AuditLog {
  id        String   @id @default(cuid())
  action    String
  entity    String
  entityId  String
  userId    String
  oldData   Json?
  newData   Json
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([entity, entityId])
  @@index([userId])
  @@index([timestamp])
}

enum UserRole {
  ADMIN
  MANAGER
  AGENT
  CUSTOMER
}
